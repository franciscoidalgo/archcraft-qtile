#!/usr/bin/env bash

## Copyright (C) 2020-2022 Aditya Shakya <adi1090x@gmail.com>
## Everyone is permitted to copy and distribute copies of this file under GNU-GPL3

DIR="$HOME/.config/qtile"
rofi_cmd="rofi -theme $DIR/rofi/themes/mpd.rasi"

button_music=''
button_play=''
button_pause=''
button_stop=''
button_next=''
button_previous=''
button_repeat=''
button_shuffle=''
button_error=''

# Colors
active=""
urgent=""

# Gets the current status of mpd
status="$(playerctl status)"
shuffle_status="$(playerctl shuffle)"
loop_status="$(playerctl loop)"

# Defines the Play / Pause option content
if [[ $status == "Playing" ]]; then
	toggle="$button_pause"
else
	toggle="$button_play"
fi

# Display if repeat mode is on / off
tog_repeat="$button_repeat"
if [[ $loop_status == "Playlist" ]]; then
    active="-a 4"
    toggle_loop="None"
elif [[ $loop_status == "None" ]]; then
    urgent="-u 4"
    toggle_loop="Playlist"
else
    tog_repeat="$button_error"
fi

# Display if random mode is on / off
tog_random="$button_shuffle"
if [[ $shuffle_status == "On" ]]; then
    [ -n "$active" ] && active+=",5" || active="-a 5"
    toggle_shuffle="Off"
elif [[ $shuffle_status == "Off" ]]; then
    [ -n "$urgent" ] && urgent+=",5" || urgent="-u 5"
    toggle_shuffle="On"
else
    tog_random="$button_error"
fi

# Variable passed to rofi
options="$toggle\n$button_stop\n$button_previous\n$button_next\n$tog_repeat\n$tog_random"

# Get the current playing song
current=$(playerctl metadata --format "{{ artist }} - {{ trunc(title, 40) }}")
# If mpd isn't running it will return an empty string, we don't want to display that
if [[ -z "$current" ]]; then
    current="None"
fi

show_msg() {
	rofi -theme "$DIR"/rofi/themes/askpass.rasi -e "Not valid for current player"
}


# Spawn the mpd menu with the "Play / Pause" entry selected by default
chosen="$(echo -e "$options" | $rofi_cmd -p "$current" -dmenu $active $urgent -selected-row 0)"
case $chosen in
    $button_previous)
        playerctl previous
        ;;
    $toggle)
        playerctl play-pause
        ;;
    $button_stop)
        playerctl stop
        ;;
    $button_next)
        playerctl next
        ;;
    $tog_repeat)
       playerctl loop $toggle_loop
       if [[ $? != 0 ]]; then
            show_msg
        fi
        ;;
    $tog_random)
        playerctl shuffle $toggle_shuffle
        if [[ $? != 0 ]]; then
            show_msg
        fi
        ;;
esac
